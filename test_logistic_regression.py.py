# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TcwFS36tvhd0o7l6NkoV6hmEH3aq2-RP
"""

import pytest
from sklearn.datasets import make_classification
from sklearn.model_selection import train_test_split
from sklearn.metrics import balanced_accuracy_score, confusion_matrix
from sklearn.linear_model import LogisticRegression

@pytest.fixture
def generate_data():
    # generate synthetic data for testing
    X, y = make_classification(n_samples=1000, n_features=10, n_classes=2, random_state=42)
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
    return X_train, X_test, y_train, y_test

def test_logistic_regression(generate_data):
    X_train, X_test, y_train, y_test = generate_data
    lr = LogisticRegression(class_weight='balanced', n_jobs=-1)
    lr.fit(X_train, y_train)
    y_pred_train = lr.predict(X_train)
    y_pred_test = lr.predict(X_test)
    assert isinstance(lr, LogisticRegression)
    assert len(y_pred_train) == len(y_train)
    assert len(y_pred_test) == len(y_test)
    assert balanced_accuracy_score(y_train, y_pred_train) > 0.5
    assert balanced_accuracy_score(y_test, y_pred_test) > 0.5
    assert isinstance(confusion_matrix(y_test, y_pred_test), np.ndarray)